Листинги
~~~~~~~~~~

.. _ex0601:

Листинг ex_06_01.cpp
=====================

.. code-block:: cpp

        #include<iostream>
	#include<cmath>
	#include<stdio.h>
	#include<string> //библиотека работы со строками
	using namespace std;

	//Разложение числа на множители
	string decomposition_number(int number)
	{
	    string result=""; //переменная для "сбора" результатов. Инициализируется "пустой" строкой
	    int i=2;          //первый делитель (простое число)
	    while (number>1)
	    {
		if (number%i==0) //ЕСЛИ остаток от деления на текущее i равен 0
		{
		    //cout<<i<<" ";  //выводим этот делитель i
		    result+=to_string(i) + " "; //добавить делитель к результату 
		                                //преобразование целого числа в строку (to_string(i)) и добавление к общему результату с пробелом
		    number=number/i;   //уменьшить number в i раз
		}
		else                //ИНАЧЕ
		{
		    i++;            //увеличиваем i на 1
		}
	    }
	    return result;          //вернуть в место вызова значение переменной result
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

	int main()
	{
	    int n;
	    string res=""; //переменная для "получения" результатов. Инициализируется "пустой" строкой
	    cout<<"Введите число"<<endl;
	    cin>>n;
	    res = decomposition_number(n);
	    cout<<"\n"<<res<<endl;
	}
        


.. _ex0602:

Листинг ex_06_02.cpp
=====================

.. code-block:: cpp

       #include<iostream>
	#include<cmath>
	#include<stdio.h>
	#include<string> //библиотека работы со строками
	using namespace std;

	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	//Подсчет числа делителей числа
	int count_divider(int number)
	{
	    int result=0; //переменная для "сбора" результатов. Инициализируется "пустой" строкой
	    int i=2;          //первый делитель (простое число)
	    while (number>1)
	    {
		if (number%i==0) //ЕСЛИ остаток от деления на текущее i равен 0
		{
		    //cout<<i<<" ";  //выводим этот делитель i
		    result++;
		    number=number/i;   //уменьшить number в i раз
		}
		else                //ИНАЧЕ
		{
		    i++;            //увеличиваем i на 1
		}
	    }
	    return result;          //вернуть в место вызова значение переменной result
	}

	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	//Число с максимальным количеством делителей
	int max_count_divider(int beg, int end)
	{
	    int result=0; //переменная для "сбора" результатов. Инициализируется "пустой" строкой
	    int cd = 0;   //количество делителей
	    int max = 0;
	    for (int i=beg;i<=end;i++)   //для всех чисел i от значения beg до значения end c шагом 1 повторять...
	    {
		cd = count_divider(i);  //подсчитать количество делителей (вызвать функцию count_divider с аргументом i)
		if (cd>max)             //ЕСЛИ количество делителей превышает текущий максимум
		{
		    max = cd;           // ТО переопределить (поменять) текущий максимум на значение cd
		    result = i;         // и запомнить это число в переменную result
		}
	    }
	    return result;          //вернуть в место вызова значение переменной result
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

	int main()
	{
	    int n;
	    int res=0; //переменная для "получения" результатов. Инициализируется "пустой" строкой
	    //1)
	    cout<<"Введите число"<<endl;
	    cin>>n;
	    res = count_divider(n);     //
	    cout<<"\n"<<res<<endl;
	    //-----------------------------------
	    //2)
	    res = max_count_divider(2,9999);
	    cout<<"\n"<<res<<" - "<<count_divider(res)<<endl;
	    //--------------------------------------------------

	}

.. _ex0603:

Листинг ex_06_03.cpp
=====================

.. code-block:: cpp

	#include<iostream>
	#include<cmath>
	#include<stdio.h>
	using namespace std;

	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	double iter_cycle(double e)
	{
	    double S = 0;   // сумма членов ряда
	    double an;      // член ряда
	    double n = 1.0;      // номер члена ряда
	    an = (2.0*n-1)/(pow(2.0,n));
	    while (an >= e)
	    {
		S += an;
		n++;
		an = (2.0*n-1)/(pow(2.0,n));
		//cout<<an<<endl;
	    }
	    return S;
	}

	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


	int main()
	{
	    double e=0.0001;
	    double res; //переменная для "получения" результатов.
	    //cout<<"Введите число e"<<endl;
	    //cin>>e;
	    res = iter_cycle(e);     //
	    cout<<"\n"<<res<<endl;
	    //-----------------------------------
	}
	

