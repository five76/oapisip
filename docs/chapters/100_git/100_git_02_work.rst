Работа с Git
------------

Для управления Git используются различные команды, смысл которых поясняется далее.

git status
~~~~~~~~~~
При работе с Git, важно понимать текущий статус репозитория. 
Для этого в Git есть команда **git status**

.. figure::git_status.png
       :scale: 100 %
       :align: center
       :alt: asda
       
Git сообщает, что мы находимся в ветке **master** (эта ветка создаётся сама и используется по умолчанию), и что ему нечего добавлять в коммит. Кроме этого, Git предлагает создать или скопировать файлы и после этого воспользоваться командой **git add**, чтобы Git начал за ними следить.


Создание файла README и добавление в него строки «test»

::

	$ touch README
	$ echo "test" >> README
	

После этого вывод **git status** выглядит таким образом:

.. figure::git_status2.png
       :scale: 100 %
       :align: center
       :alt: asda
       
Есть файл, за которым Git ещё не следит (Untracked)

git add
~~~~~~~

Для того, чтобы Git начал следить за файлами, используется команда **git add**

Можно указать что надо следить за конкретным файлом

::

	$ git add README
	
Или за всеми файлами

::

	$ git add .
	
Вывод git status

.. figure::git_status2.png
       :scale: 100 %
       :align: center
       :alt: asda
       
Теперь файлы находятся в секции под названием «Changes to be committed».

git commit
~~~~~~~~~~

После того, как все нужные файлы были добавлены в *staging*, можно закоммитить изменения. **Staging** — это совокупность файлов, которые будут добавлены в следующий **коммит** (фиксированное состояние). У команды **git commit** есть только один обязательный параметр – флаг **«-m»**. Он позволяет указать сообщение для этого коммита.

::

	$ git commit -m "First commit"

.. figure::git_commit.png
       :scale: 100 %
       :align: center
       :alt: asda
       
После этого git status отображает

.. figure::git_status3.png
       :scale: 100 %
       :align: center
       :alt: asda
       

Фраза «nothing to commit, working directory clean» обозначает, что нет изменений, которые нужно добавить в Git или закоммитить (зафиксировать).


